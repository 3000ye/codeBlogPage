<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>3000ye Code Blog</title>
    <link>http://code.3000ye.com/</link>
    <description>Recent content on 3000ye Code Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <atom:link href="http://code.3000ye.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode</title>
      <link>http://code.3000ye.com/leetcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://code.3000ye.com/leetcode/</guid>
      <description> Linked List 21. Merge Two Sorted Lists 题面 有两个链表，其中的节点都按照节点值有序排序，请你将这两个链表合并为一个有序链表。&#xA;题解 typedef ListNode* ListLink; class Solution { public: ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) { if (list1 == nullptr) return list2; if (list2 == nullptr) return list1; // 将头节点较小的链表放在 list1 if (list1-&amp;gt;val &amp;gt; list2-&amp;gt;val) swap(list1, list2); // 遍历 list2，按大小插入 list1 auto ls1 = list1, ls2 = list2; while (ls2 != nullptr) { if (ls1-&amp;gt;next != nullptr and ls2-&amp;gt;val &amp;gt; ls1-&amp;gt;next-&amp;gt;val) {} else { // 插入节点 ListLink temp = new ListNode(ls2-&amp;gt;val, ls1-&amp;gt;next); ls1-&amp;gt;next = temp; ls2 = ls2-&amp;gt;next; } ls1 = ls1-&amp;gt;next; } return list1; } }; 第二题 Stack </description>
    </item>
  </channel>
</rss>
